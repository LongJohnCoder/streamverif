(*rotate-left(x): returns ret*)
(*Given a tree with pointers 'left' and 'right', rotates the left child of the root into the root position*)

Reach([x], [left,right], [nil])

init {
 x_l := nil;
 x_lr := nil;
 ret := nil
 }

assume(T != F);

if (x = nil) then {
 ret := x
}
else {
 
 x_l := left(x);
 
 if (x_l = nil) then {
  ret := x
 }
 else {
  x_lr := right(x_l);
  right(x_l) := x;
  left(x) := x_lr
 }
}